server {
  name = tr069
  http {
    host = 0.0.0.0
    port = 9000
    mode = chunked
  }
  circuit-breaker {
    maxFailures = 3
    callTimeout = 2s
    resetTimeout = 10s
  }
  response {
    timeout = 2s
  }
  actor {
    timeout = 2s
  }
  auth.method = digest
}

authentic {
  realm = freeacs
  digest {
    realm = ${authentic.realm}
    nonce {
      privateKey = secret
      timeout = 10000
    }
  }
  basic {
    realm = ${authentic.realm}
  }
}

# The SessionCache expiration time if not touched
session.expirationTime = 5 minutes

akka {
  loglevel = DEBUG
  log-config-on-start = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  http Â {
    server {
      remote-address-header = on
    }
    caching {
      lfu-cache {
        time-to-live = 60s
      }
    }
  }
  actor {
    provider = "cluster"
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "com.github.freeacs.state.SessionState" = proto
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://freeacs-http@127.0.0.1:2551",
      "akka.tcp://freeacs-http@127.0.0.1:2552"
    ]
  }
}


db {
  profile = "slick.jdbc.H2Profile$"
  db {
    connectionPool = disabled
    keepAliveConnection = true
    driver = "org.h2.Driver"
    url = "jdbc:h2:mem:test1;MODE=MYSQL;DB_CLOSE_DELAY=-1;INIT=runscript from 'src/main/resources/h2-schema.sql'"
  }
}

//db {
//  profile = "slick.jdbc.MySQLProfile$"
//  db {
//    url = "jdbc:mysql://localhost:3306/acs?user=acs&password=acs"
//    driver = com.mysql.jdbc.Driver
//    maxThreads = 5
//  }
//}
